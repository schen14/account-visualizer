// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String?
  password  String?
  firstName String?
  lastName  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  accounts  Account[]
  thirdPartyUsers ThirdPartyUser[]

  // @@map("users")
}

model ThirdPartyUser {
  externalId  String
  provider    String
  user        User      @relation(fields: [userId], references: [id])
  userId      Int

  @@id(name: "thirdPartyUserId", [externalId, provider])
}

model Account {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  name        String
  accountType AccountType
  note        String?
  iconPath    String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  records     Record[]
}

enum AccountType {
  CHECKING
  SAVINGS
  RETIREMENT
  BROKERAGE
  LIABILITY
  OTHER
}

model Record {
  id        Int       @id @default(autoincrement())
  account   Account   @relation(fields: [accountId], references: [id])
  accountId Int
  value     Decimal
  createdAt DateTime  @default(now())
  createdBy String?
  updatedAt DateTime  @updatedAt
  updatedBy String?
}